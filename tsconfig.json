// TypeScript config file that matches all source files in the project. This file is read by
// IDEs and TSLint. For IDEs it ensures that `experimentalDecorator` warnings are not showing up.
{
  "compilerOptions": {
    "alwaysStrict": true,
    "charset": "utf8",
    "declaration": true,
    "inlineSourceMap": true,
    "inlineSources": true,
    "outDir": "./dist/packages/all",
    "experimentalDecorators": true,
    // Bazel either uses "umd" or "esnext". We replicate this here for IDE support.
    // https://github.com/bazelbuild/rules_typescript/blob/master/internal/common/tsconfig.bzl#L199
    "module": "esnext",
    "moduleResolution": "node",
    "noEmitOnError": false,
    "noUnusedParameters": false,
    "noFallthroughCasesInSwitch": true,
    "noUnusedLocals": false,
    "noImplicitReturns": true,
    "noImplicitAny": true,
    "noImplicitThis": true,
    "skipLibCheck": true,
    "strict": true,
    "strictNullChecks": true,
    "strictPropertyInitialization": true,
    "stripInternal": true,
    "target": "es2018",
    "lib": ["es2018"],
    "types": ["jest", "node"],
    "baseUrl": ".",
    "paths": {
      "cdk8s": ["./packages/cdk8s/lib"]
    }
  },
  "include": [
    "packages/**/*.ts",
    "examples/**/*.ts",
    "tools/**/*.ts"
  ],
  "exclude": [
    // IDEs should not type-check the different node_modules directories of the different packages.
    // This would cause the IDEs to be slower and also linters would check the node_modules.
    "node_modules/"
  ],
  "bazelOptions": {
    // Note: We can remove this once we fully switched away from Gulp. Currently we still set
    // some options here just in favor of the standard tsconfig's which extending this one.
    "suppressTsconfigOverrideWarnings": true
  }
}
